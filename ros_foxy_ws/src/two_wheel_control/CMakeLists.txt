cmake_minimum_required(VERSION 3.5)
project(two_wheel_control)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++20

if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()


if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic -g)
endif()

add_compile_options(-g)

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(ros2_control REQUIRED)
find_package(rclcpp REQUIRED)
find_package(controller_interface REQUIRED)
find_package(hardware_interface REQUIRED) 
find_package(pluginlib REQUIRED)
find_package(rclcpp_lifecycle REQUIRED)
find_package(two_wheel_control_msgs REQUIRED)
find_package(control_toolbox REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(tf2_msgs REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

add_executable(two_wheel_sliding_balance
  src/two_wheel_sliding_balance.cpp
)

target_include_directories(two_wheel_sliding_balance
  PRIVATE
  include
)

ament_target_dependencies(two_wheel_sliding_balance
  rclcpp
  two_wheel_control_msgs
)

add_library(two_wheel_control
  SHARED
  src/two_wheel_ID_controller.cpp
  src/two_wheel_MPC_controller.cpp
  src/two_wheel_EKF.cpp
  src/two_wheel_input_forward.cpp
)


target_include_directories(two_wheel_control
  PRIVATE
  include
)

ament_target_dependencies(two_wheel_control
  controller_interface
  hardware_interface
  pluginlib
  rclcpp
  rclcpp_lifecycle
  two_wheel_control_msgs
  control_toolbox
  nav_msgs
  tf2_msgs
)

target_compile_definitions(two_wheel_control PUBLIC "PLUGINLIB__DISABLE_BOOST_FUNCTIONS")
pluginlib_export_plugin_description_file(controller_interface two_wheel_ID_controller.xml)
pluginlib_export_plugin_description_file(controller_interface two_wheel_MPC_controller.xml)
pluginlib_export_plugin_description_file(controller_interface two_wheel_EKF.xml)
pluginlib_export_plugin_description_file(controller_interface two_wheel_input_forward.xml)

install(DIRECTORY 
  include/  
  DESTINATION include
)

install(DIRECTORY
  config
  launch
  DESTINATION share/${PROJECT_NAME}
)

install(
  TARGETS
  two_wheel_sliding_balance
  DESTINATION lib/${PROJECT_NAME}
)

install(
  TARGETS
  two_wheel_control
  two_wheel_sliding_balance
  RUNTIME DESTINATION bin
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()
ament_export_include_directories(
  include
)
ament_export_libraries(
  two_wheel_control
)

ament_package()
