<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="Two_Wheel">
    
    <xacro:property name="l_b" value="0.4"/>
    <xacro:property name="w_b" value="1"/>
    <xacro:property name="h_b" value="1"/>
    <xacro:property name="m_b" value="20"/>
    <xacro:property name="m_w" value="0.1"/>
    <xacro:property name="r_w" value="0.2"/>
    <xacro:property name="w_t" value="0.01"/>
    <xacro:property name="I_b_xx" value="${1/12 * m_b * (w_b * w_b + h_b*h_b)}"/>
    <xacro:property name="I_b_yy" value="${1/12 * m_b * (l_b * l_b + h_b*h_b)}"/>
    <xacro:property name="I_b_zz" value="${1/12 * m_b * (w_b * w_b + l_b*l_b)}"/>
    <xacro:property name="I_w_xx" value="${1/2 * m_w * r_w * r_w}"/>
    <xacro:property name="I_w_yy" value="${1/4 * m_w * r_w * r_w + 1/12 * m_w * w_t * w_t}"/>
    <xacro:property name="I_w_zz" value="${1/4 * m_w * r_w * r_w + 1/12 * m_w * w_t * w_t}"/>
    <xacro:property name="eff_lim" value="100"/>
    <xacro:property name="speed_lim" value="100"/>
    
    <link name="root">
    </link>

    <joint name="base_link_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="root"/>
        <child link="base_link"/>
    </joint>

    <link name="base_link">
        <inertial>
            <origin  xyz='0 0 0' rpy='0 0 0'/>
            <mass value="${m_b}"/>
            <inertia ixx="${I_b_xx}" ixy="0.0" ixz="0.0" iyy="${I_b_yy}" iyz="0.0" izz="${I_b_zz}"/>    
        </inertial>
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>    
            <geometry>
                <box size="${l_b} ${w_b} ${h_b}"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${l_b} ${w_b} ${h_b}"/>
            </geometry>
        </collision>
    </link>

    <joint name="RW_joint" type="revolute">
        <origin xyz="0 ${w_b/2} ${-h_b/2}" rpy="0.0 0.0 0.0"/>
        <axis xyz="0 1 0"/>
        <parent link="base_link"/>
        <child link="RW"/>
        <limit effort="${eff_lim}" velocity="${speed_lim}" lower="-${eff_lim}" upper="${eff_lim}"/>
    </joint>

    <link name="RW">
        <inertial>
            <origin xyz="0.0 ${w_t/2} 0.0" rpy="${pi/2} 0.0 0.0"/>
            <mass value="${m_w}"/>
            <inertia ixx="${I_w_xx}" ixy="0.0" ixz="0.0" iyy="${I_w_yy}" iyz="0.0" izz="${I_w_zz}"/>
        </inertial>
        <visual>
            <origin xyz="0.0 ${w_t/2} 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${r_w}" length="${w_t}"/> 
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.0 ${w_t/2} 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${r_w}" length="${w_t}"/>    
            </geometry>
        </collision>
    </link>

    <joint name="LW_joint" type="revolute">
        <origin xyz="0 ${-w_b/2} ${-h_b/2}" rpy="0.0 0.0 0.0"/>
        <axis xyz="0 1 0"/>
        <parent link="base_link"/>
        <child link="LW"/>
        <limit effort="${eff_lim}" velocity="${speed_lim}" lower="-${eff_lim}" upper="${eff_lim}"/>
    </joint>

    <link name="LW">
        <inertial>
            <origin xyz="0.0 ${-w_t/2} 0.0" rpy="${pi/2} 0.0 0.0"/>
            <mass value="${m_w}"/>
            <inertia ixx="${I_w_xx}" ixy="0.0" ixz="0.0" iyy="${I_w_yy}" iyz="0.0" izz="${I_w_zz}"/>
        </inertial>
        <visual>
            <origin xyz="0.0 ${-w_t/2} 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${r_w}" length="${w_t}"/> 
            </geometry>
        </visual>
        <collision>
            <origin xyz="0.0 ${-w_t/2} 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${r_w}" length="${w_t}"/>    
            </geometry>
        </collision>
    </link>

    <joint name="imu_joint" type="fixed">
        <axis xyz="1 0 0"/> 
        <origin xyz="0 0 0"/>
        <parent link="base_link"/>
        <child link="imu_link"/>
      </joint>
    
    
    <link name="imu_link">
      <inertial>
        <mass value="0.001"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="0.001 0.001 0.001"/>
        </geometry>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size=".001 .001 .001"/>
        </geometry>
      </collision>
    </link>
    
    <gazebo reference="imu_link">
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>1000</update_rate>
            <visualize>true</visualize>
            <topic>imu_data</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>imu</topicName>
                <bodyName>imu_link</bodyName>
                <updateRateHZ>10.0</updateRateHZ>
                <gaussianNoise>0.0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
                <initialOrientationAsReference>true</initialOrientationAsReference>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
        </sensor>
    </gazebo>
   

   <ros2_control name="TwoWheel" type="system">
        <hardware>
            <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>
        
        <joint name="RW_joint">
            <command_interface name="effort">
                <param name="min">-${eff_lim}</param>
                <param name="max">${eff_lim}</param>
            </command_interface>
            <!-- <command_interface name="velocity">
                <param name="min">-${speed_lim}</param>
                <param name="max">${speed_lim}</param>
            </command_interface> -->
            <state_interface name="position"/>
            <state_interface name="velocity"/>
            <state_interface name="effort"/>
        </joint>

        <joint name="LW_joint">
            <command_interface name="effort">
                <param name="min">-${eff_lim}</param>
                <param name="max">${eff_lim}</param>
            </command_interface>
            <!-- <command_interface name="velocity">
                <param name="min">-${speed_lim}</param>
                <param name="max">${speed_lim}</param>
            </command_interface> -->
            <state_interface name="position"/>
            <state_interface name="velocity"/>
            <state_interface name="effort"/>
        </joint>

        <sensor name="imu_sensor">
            <state_interface name="orientation.x"/>
            <state_interface name="orientation.y"/>
            <state_interface name="orientation.z"/>
            <state_interface name="orientation.w"/>
            <state_interface name="angular_velocity.x"/>
            <state_interface name="angular_velocity.y"/>
            <state_interface name="angular_velocity.z"/>
            <state_interface name="linear_acceleration.x"/>
            <state_interface name="linear_acceleration.y"/>
            <state_interface name="linear_acceleration.z"/>
        </sensor>
   </ros2_control>

    <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
            <robot_param>robot_description</robot_param>
            <robot_param_node>robot_state_publisher</robot_param_node>
            <parameters>/home/lorenzo/Two_Wheel/ros_foxy_ws/src/two_wheel_sim/config/controller.yaml</parameters>
            <!-- <parameters>$(find two_wheel_sim)/config/controller.yaml</parameters> -->
        </plugin>
    </gazebo>

</robot>